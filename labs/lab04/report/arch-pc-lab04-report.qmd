---
## Author
author:
  name: Иванова Анастасия Сергеевна 
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: 1132250427@rudn.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: "Отчет по лабораторной работе №4"
license: "CC BY"
---

# Цель работы

Освоить процедуры компиляции и сборки программ, написанных на ассемблере NASM.

# Выполнение лабораторной работы
1.Программа Hello world!

Рассмотрим пример простой программы на языке ассемблера NASM. Традиционно первая
программа выводит приветственное сообщение Hello world! на экран.
Создадим каталог для работы с программами на языке ассемблера NASM и перейдем в созданный каталог [рис.@fig-001]):

![Создание каталога и переход в него](image/1.1.png){#fig-001 width=70%}


Создадим текстовый файл с именем hello.asm и откроем этот файл с помощью текстового редактора gedit[рис.@fig-002]):

![Создание текстового файла и измение в текстовом редакторе](image/1.2.png){#fig-002 width=70%}


Введем в него необходимый текст [рис. @fig-003]):

![Ввод текста](image/text1.png){#fig-003 width=70%}


2.Транслятор NASM

NASM превращает текст программы в объектный код. Для компиляции приведённого выше текста программы «Hello World» напишем [рис. @fig-004]):

![Превращение текста в объектный код](image/1.3.png){#fig-004 width=70%}


Транслятор преобразовал текст программы из файла hello.asm в объектный код, который записался в файл hello.o.

3.Расширенный синтаксис командной строки NASM

Выполним следующую команду [рис. @fig-005]):

![Компиляция исходного файла](image/1.4.png){#fig-005 width=70%}


Данная команда скомпилировала исходный файл hello.asm в obj.o, при этом формат выходного файла стал elf, в который включены символы для отладки.

4.Компоновщик LD

Чтобы получить исполняемую программу, объектный файл, передадим на обработку компоновщику [рис. @fig-006]):

![Передача на обработку компоновщику](image/1.5.png){#fig-006 width=70%}


Ключ -o с последующим значением задал в данном имя создаваемого исполняемого файла.

Выполним следующую команду [рис. @fig-007]):

![Переход в каталог курса](image/1.6.png){#fig-007 width=70%}

Проверка содержимого папки, после выполнения всех команд [рис. @fig-008]):

![Проверка содержимого папки](image/1.ls.png){#fig-008 width=70%}

5.Запуск исполняемого файла

Запустим созданный исполняемый файл, находящийся в текущем каталоге, набрав в командной строке ./hello [рис. @fig-009]):

![Запуск исполняемого файла](image/1.7.png){#fig-009 width=70%}


# Задание для самостоятельной работы

1. В каталоге ~/work/arch-pc/lab04 с помощью команды cp создадим копию файла hello.asm с именем lab4.asm [рис. @fig-010]):

![Копирование файла hello.asm](image/2.1.png){#fig-010 width=70%}

2. С помощью текстового редактора внесем изменения в текст программы в
файле lab4.asm так, чтобы вместо Hello world! на экран выводились фамилия и имя [рис. @fig-011]):

![Внесение изменений в файл](image/2.2.png){#fig-011 width=70%}

3. Оттранслируем полученный текст программы lab4.asm в объектный файл. Выполним
компоновку объектного файла и запустим получившийся исполняемый файл [рис. @fig-012]):

![Выполнение команд](image/2.3.png){#fig-012 width=70%}

4. Скопируем файлы hello.asm и lab4.asm в Наш локальный репозиторий в каталог ~/work/study/2025-2026/"Архитектура компьютера"/arch-pc/labs/lab04/ и загрузим файлы на Github [рис. @fig-013]):

![Копирование файлов в репозиторий](image/2.4.png){#fig-013 width=70%}

[рис. @fig-014]):

![Загрузка файлов на Github](image/2.5.png){#fig-014 width=70%}

# Вывод

Мы освоили процедуры компиляции и сборки программ, написанных на ассемблере NASM.

::: {#refs}
:::
